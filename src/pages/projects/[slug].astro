---
export const prerender = true;

import type { GetStaticPaths } from "astro";
import Layout from "../../layouts/Layout.astro";
import { sanityClient } from "sanity:client";
import { picture } from "astro-sanity-picture";
import { toHTML } from "@portabletext/to-html";

import DynamicIframe from "../../components/DynamicIframe";

export const getStaticPaths = (async () => {
  const query = `*[_type == "project" && defined(slug)] | order(publishedAt desc) {
        title,
        slug,
        shortDescription,
        ${picture("image")},
        content,
        layout,
        "iframeFileUrl":iframe.asset->url, 
        iframeUrl,
        githubUrl,
    }`;

  const projects = await sanityClient.fetch(query);

  return projects.map((project: any) => {
    return {
      params: { title: project.title, slug: project.slug.current },
      props: {
        title: project.title,
        image: project.image.asset.url,
        content: project.content,
        layout: project.layout,
        iframeFileUrl: project.iframeFileUrl,
        iframeUrl: project.iframeUrl,
        githubUrl: project.githubUrl,
      },
    };
  });
}) satisfies GetStaticPaths;

const { title, image, content, layout, iframeFileUrl, iframeUrl, githubUrl } =
  Astro.props;

let d = toHTML(content, {
  components: {
    block: {
      h2: ({ children }) => {
        return `<h2 class="text-2xl mt-5">${children}</h2>`;
      },
    },
    list: {
      // Ex. 1: customizing common list types
      bullet: ({ children }) =>
        `<ul class="mt-xl list-disc pl-5">${children}</ul>`,
      number: ({ children }) => `<ol class="mt-lg">${children}</ol>`,
    },
    listItem: {
      // Ex. 1: customizing common list types
      bullet: ({ children }) => `<li>${children}</li>`,
      checkmarks: ({ children }) => `<li>âœ… ${children}</li>`,
    },
  },
});
---

<Layout title={title + " - Antoine Ando"}>
  <h1 class="text-4xl mb-5">{title}</h1>

  <div class="w-[90%] pb-40 gap-5">
    {
      layout === "iframe" ? (
        <DynamicIframe client:load url={iframeFileUrl} />
      ) : (
        <img src={`${image}?h=500`} alt="Main image" class="" />
      )
    }
    <div>
      <Fragment set:html={d} />
    </div>

    {
      githubUrl && (
        <a
          href={githubUrl}
          class="flex text-blue-500 hover:underline mt-5 items-center gap-3"
          target="_blank"
        >
          <i class="fa fa-github" aria-hidden="true" />
          View on GitHub
          <i class="fa fa-external-link" aria-hidden="true" />
        </a>
      )
    }
  </div>
</Layout>
